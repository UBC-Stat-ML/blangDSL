/**
 * generated by Xtext 2.9.1
 */
package ca.ubc.stat.blang.blangDsl.util;

import ca.ubc.stat.blang.blangDsl.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see ca.ubc.stat.blang.blangDsl.BlangDslPackage
 * @generated
 */
public class BlangDslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BlangDslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BlangDslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = BlangDslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BlangDslSwitch<Adapter> modelSwitch =
    new BlangDslSwitch<Adapter>()
    {
      @Override
      public Adapter caseBlangModel(BlangModel object)
      {
        return createBlangModelAdapter();
      }
      @Override
      public Adapter caseVars(Vars object)
      {
        return createVarsAdapter();
      }
      @Override
      public Adapter caseRandom(Random object)
      {
        return createRandomAdapter();
      }
      @Override
      public Adapter caseParamVar(ParamVar object)
      {
        return createParamVarAdapter();
      }
      @Override
      public Adapter caseConst(Const object)
      {
        return createConstAdapter();
      }
      @Override
      public Adapter caseVarDecl(VarDecl object)
      {
        return createVarDeclAdapter();
      }
      @Override
      public Adapter caseLaws(Laws object)
      {
        return createLawsAdapter();
      }
      @Override
      public Adapter caseModelComponent(ModelComponent object)
      {
        return createModelComponentAdapter();
      }
      @Override
      public Adapter caseSupportFactor(SupportFactor object)
      {
        return createSupportFactorAdapter();
      }
      @Override
      public Adapter caseModelParam(ModelParam object)
      {
        return createModelParamAdapter();
      }
      @Override
      public Adapter caseDependency(Dependency object)
      {
        return createDependencyAdapter();
      }
      @Override
      public Adapter caseDistribution(Distribution object)
      {
        return createDistributionAdapter();
      }
      @Override
      public Adapter caseParam(Param object)
      {
        return createParamAdapter();
      }
      @Override
      public Adapter caseConstParam(ConstParam object)
      {
        return createConstParamAdapter();
      }
      @Override
      public Adapter caseLazyParam(LazyParam object)
      {
        return createLazyParamAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.BlangModel <em>Blang Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.BlangModel
   * @generated
   */
  public Adapter createBlangModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.Vars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.Vars
   * @generated
   */
  public Adapter createVarsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.Random <em>Random</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.Random
   * @generated
   */
  public Adapter createRandomAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.ParamVar <em>Param Var</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.ParamVar
   * @generated
   */
  public Adapter createParamVarAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.Const <em>Const</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.Const
   * @generated
   */
  public Adapter createConstAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.VarDecl <em>Var Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.VarDecl
   * @generated
   */
  public Adapter createVarDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.Laws <em>Laws</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.Laws
   * @generated
   */
  public Adapter createLawsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.ModelComponent <em>Model Component</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.ModelComponent
   * @generated
   */
  public Adapter createModelComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.SupportFactor <em>Support Factor</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.SupportFactor
   * @generated
   */
  public Adapter createSupportFactorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.ModelParam <em>Model Param</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.ModelParam
   * @generated
   */
  public Adapter createModelParamAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.Dependency <em>Dependency</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.Dependency
   * @generated
   */
  public Adapter createDependencyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.Distribution <em>Distribution</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.Distribution
   * @generated
   */
  public Adapter createDistributionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.Param <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.Param
   * @generated
   */
  public Adapter createParamAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.ConstParam <em>Const Param</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.ConstParam
   * @generated
   */
  public Adapter createConstParamAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link ca.ubc.stat.blang.blangDsl.LazyParam <em>Lazy Param</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see ca.ubc.stat.blang.blangDsl.LazyParam
   * @generated
   */
  public Adapter createLazyParamAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //BlangDslAdapterFactory
